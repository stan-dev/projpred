% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_varsel.R
\name{cv_varsel}
\alias{cv_varsel}
\alias{cv_varsel.default}
\alias{cv_varsel.refmodel}
\title{Variable selection with cross-validation}
\usage{
cv_varsel(object, ...)

\method{cv_varsel}{default}(object, ...)

\method{cv_varsel}{refmodel}(
  object,
  method = NULL,
  cv_method = if (!inherits(object, "datafit")) "LOO" else "kfold",
  ndraws = 20,
  nclusters = NULL,
  ndraws_pred = 400,
  nclusters_pred = NULL,
  cv_search = !inherits(object, "datafit"),
  nterms_max = NULL,
  penalty = NULL,
  verbose = TRUE,
  nloo = NULL,
  K = NULL,
  lambda_min_ratio = 1e-05,
  nlambda = 150,
  thresh = 1e-06,
  regul = 1e-04,
  validate_search = TRUE,
  seed = NULL,
  search_terms = NULL,
  ...
)
}
\arguments{
\item{object}{Either a \code{refmodel}-type object created by
\code{\link[=init_refmodel]{init_refmodel()}}, an object which can be converted to a
reference model using \code{\link[=get_refmodel]{get_refmodel()}}, or a \code{vsel}
object resulting from \code{\link[=varsel]{varsel()}} or \code{\link[=cv_varsel]{cv_varsel()}}.}

\item{...}{Additional arguments to be passed to the \code{\link[=get_refmodel]{get_refmodel()}}
function.}

\item{method}{The search method, i.e. the method for finding a single
submodel per number of terms. Possible options are \code{"L1"} for L1
search and \code{"forward"} for forward search. Default is \code{"forward"}
if the reference model has multilevel or additive terms and \code{"L1"}
otherwise.}

\item{cv_method}{The CV method, either \code{"LOO"} or \code{"kfold"}.}

\item{ndraws}{Number of posterior draws used in the variable selection.
Automatically truncated at the number of draws in the reference model
(which is \code{1} for \code{datafit}s). \strong{Caution:} For \code{ndraws <= 20},
the value of \code{ndraws} is passed to \code{nclusters} (so that
clustering is used). Ignored if \code{nclusters} is not \code{NULL} or if
\code{method == "L1"} (L1 search uses always one cluster). See also section
"Details" below.}

\item{nclusters}{Number of clusters of posterior draws used in the variable
selection. Ignored if \code{method == "L1"} (L1 search uses always one
cluster). For the meaning of \code{NULL}, see argument \code{ndraws}. See
also section "Details" below.}

\item{ndraws_pred}{Number of posterior draws used for prediction (after
selection). Automatically truncated at the number of draws in the reference
model (which is \code{1} for \code{datafit}s). \strong{Caution:} For
\code{ndraws_pred <= 20}, the value of \code{ndraws_pred} is passed to
\code{nclusters_pred} (so that clustering is used). Ignored if
\code{nclusters_pred} is not \code{NULL}. See also section "Details" below.}

\item{nclusters_pred}{Number of clusters of posterior draws used for
prediction (after selection). For the meaning of \code{NULL}, see argument
\code{ndraws_pred}. See also section "Details" below.}

\item{cv_search}{If \code{TRUE}, then the projected coefficients after an L1
search are computed without any penalization (or using only the
regularization determined by \code{regul}). If \code{FALSE}, then the
coefficients are the solution from the L1-penalized projection. This option
is relevant only if \code{method == "L1"}. Default is \code{TRUE} for
genuine reference models and \code{FALSE} if \code{object} is datafit (see
\code{\link[=init_refmodel]{init_refmodel()}}).}

\item{nterms_max}{Maximum number of variables until which the selection is
continued. Defaults to \code{min(19, D)} where \code{D} is the number of
terms in the reference model (or in \code{search_terms}, if supplied). Note
that \code{nterms_max} does not count the intercept, so use
\code{nterms_max = 0} for the intercept-only model.}

\item{penalty}{Vector determining the relative penalties or costs for the
variables. A value of \code{0} means that those variables have no cost and
will therefore be selected first, whereas \code{Inf} means those variables
will never be selected. Currently works only if \code{method == "L1"}. By
default \code{1} for each variable.}

\item{verbose}{A single logical value indicating whether to print out
additional information while running (\code{TRUE}) or not (\code{FALSE}).}

\item{nloo}{Number of observations used to compute the LOO validation
(anything between 1 and the total number of observations). Smaller values
lead to faster computation but higher uncertainty (larger errorbars) in the
accuracy estimation. Default is to use all observations, but for faster
experimentation, one can set this to a small value such as 100. Only
applicable if \code{cv_method == "LOO"}.}

\item{K}{Number of folds in the K-fold cross validation. Default is 5 for
genuine reference models and 10 for datafits (that is, for penalized
maximum likelihood estimation).}

\item{lambda_min_ratio}{Ratio between the smallest and largest lambda in the
L1-penalized search. This parameter essentially determines how long the
search is carried out, i.e., how large submodels are explored. No need to
change the default value unless the program gives a warning about this.}

\item{nlambda}{Number of values in the lambda grid for L1-penalized search.
No need to change unless the program gives a warning about this.}

\item{thresh}{Convergence threshold when computing the L1 path. Usually,
there is no need to change this.}

\item{regul}{A number giving the amount of ridge regularization when
projecting onto (i.e., fitting) submodels which are (G)LMs. Usually there
is no need for regularization, but sometimes we need to add (or rather
increase, given that \code{regul} defaults to \code{1e-4}) some regularization to
avoid numerical problems.}

\item{validate_search}{Whether to cross-validate also the selection process,
that is, whether to perform selection separately for each fold. Default is
TRUE and we strongly recommend not setting this to FALSE, because this is
known to bias the accuracy estimates for the selected submodels. However,
setting this to FALSE can sometimes be useful because comparing the results
to the case where this parameter is TRUE gives idea how strongly the
feature selection is (over)fitted to the data (the difference corresponds
to the search degrees of freedom or the effective number of parameters
introduced by the selectin process).}

\item{seed}{Pseudorandom number generation (PRNG) seed by which the same
results can be obtained again if needed. If \code{NULL}, no seed is set and
therefore, the results are not reproducible. See \code{\link[=set.seed]{set.seed()}} for details.
Here, this seed is used for clustering the reference model's posterior
draws (if \code{!is.null(nclusters)}), for subsampling LOO-CV folds (if \code{nloo}
is smaller than the number of observations), and for sampling the folds in
K-fold CV.}

\item{search_terms}{A custom character vector of terms to consider for
selection. The intercept (\code{"1"}) needs to be included explicitly. The
default considers all the terms in the reference model's formula.}
}
\value{
An object of class \code{vsel}. The elements of this object are not meant
to be accessed directly but instead via helper functions (see the vignettes
or type \code{?projpred}).
}
\description{
Perform the projection predictive variable selection for (G)LMs, (G)LMMs,
(G)AMs, and (G)AMMs. In contrast to \code{\link[=varsel]{varsel()}}, \code{\link[=cv_varsel]{cv_varsel()}} performs a
cross-validation (CV).
}
\details{
Notes:
\itemize{
\item Using less draws or clusters in \code{ndraws}, \code{nclusters},
\code{nclusters_pred}, or \code{ndraws_pred} than posterior draws in the
reference model may result in slightly inaccurate projection performance.
Increasing these arguments affects the computation time linearly.
\item An L1 search may select interaction terms before the corresponding main
terms are selected. If this is undesired, choose the forward search instead.
}
}
\examples{
\dontshow{if (identical(Sys.getenv("RUN_EX"), "true")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Note: The code from this example is not executed when called via example().
# To execute it, you have to copy and paste it manually to the console.
if (requireNamespace("rstanarm", quietly = TRUE)) {
  # Data:
  dat_gauss <- data.frame(y = df_gaussian$y, df_gaussian$x)

  # The "stanreg" fit which will be used as the reference model:
  fit <- rstanarm::stan_glm(
    y ~ X1 + X2 + X3 + X4 + X5, family = gaussian(), data = dat_gauss,
    QR = TRUE, chains = 2, iter = 500, refresh = 0, seed = 9876
  )

  # Variable selection with cross-validation (with small values
  # for `nterms_max`, `nclusters`, and `nclusters_pred`, but only for the
  # sake of speed in this example; this is not recommended in general):
  cvvs <- cv_varsel(fit, nterms_max = 3, nclusters = 5, nclusters_pred = 10,
                    seed = 5555)
  # Now see, for example, `?print.vsel`, `?plot.vsel`, `?suggest_size.vsel`,
  # and `?solution_terms.vsel` for possible post-processing functions.
}
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=varsel]{varsel()}}
}
