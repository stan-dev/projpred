% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{proj-pred}
\alias{proj-pred}
\alias{proj_linpred}
\alias{proj_predict}
\title{Predictions from a projected submodel}
\usage{
proj_linpred(
  object,
  newdata = NULL,
  offsetnew = NULL,
  weightsnew = NULL,
  filter_nterms = NULL,
  transform = FALSE,
  integrated = FALSE,
  ...
)

proj_predict(
  object,
  newdata = NULL,
  offsetnew = NULL,
  weightsnew = NULL,
  filter_nterms = NULL,
  nresample_clusters = 1000,
  .seed = NULL,
  ...
)
}
\arguments{
\item{object}{Either an object returned by \code{\link{project}} or
alternatively any object that can be passed to argument \code{object} of
\code{\link{project}}.}

\item{newdata}{Passed to argument \code{newdata} of the reference model's
\code{extract_model_data} function (see \code{\link{init_refmodel}}).
Provides the predictor (and possibly also the response) data for the new
observations.}

\item{offsetnew}{Passed to argument \code{orhs} of the reference model's
\code{extract_model_data} function (see \code{\link{init_refmodel}}).
Used to get the offsets for the (new) observations.}

\item{weightsnew}{Passed to argument \code{wrhs} of the reference model's
\code{extract_model_data} function (see \code{\link{init_refmodel}}).
Used to get the weights for the (new) observations.}

\item{filter_nterms}{Only applies if \code{object} is an object returned by
\code{\link{project}}. In that case, \code{filter_nterms} can be used to
filter \code{object} for only those elements (submodels) with a number of
solution terms in \code{filter_nterms}. Therefore, needs to be a numeric
vector or \code{NULL}. If \code{NULL}, use all submodels.}

\item{transform}{For \code{proj_linpred} only. A single logical value
indicating whether the linear predictor should be transformed using the
inverse-link function (\code{TRUE}) or not (\code{FALSE}).}

\item{integrated}{For \code{proj_linpred} only. A single logical value
indicating whether the output should be averaged over the projected
posterior draws (\code{TRUE}) or not (\code{FALSE}).}

\item{...}{Additional arguments passed to \code{\link{project}} if
\code{object} is not already an object returned by \code{\link{project}}.}

\item{nresample_clusters}{For \code{proj_predict} with clustered projection
only. Number of draws to return from the predictive distribution of the
projection. Not to be confused with argument \code{nclusters} of
\code{\link{project}}: \code{nresample_clusters} gives the number of draws
(\emph{with} replacement) from the set of clustered posterior draws after
projection (as determined by argument \code{nclusters} of
\code{\link{project}}).}

\item{.seed}{For \code{proj_predict} only. A seed for drawing from the
predictive distribution of the submodel(s) onto which the reference model
was (or is) projected. If a clustered projection was performed,
\code{.seed} is also used for drawing from the set of the projected
clusters of posterior draws (see argument \code{nresample_clusters}). If
\code{NULL}, no seed is set and therefore, the results are in general not
reproducible. See \code{\link{set.seed}} for details.}
}
\value{
If the prediction is done for one submodel only (i.e., \code{nterms}
has length one or \code{solution_terms} is specified):
\itemize{
\item \code{proj_linpred} returns a \code{list} with elements \code{pred}
(predictions) and \code{lpd} (log predictive densities). Each of these
two elements is a \eqn{S \times N}{S x N} matrix.
\item \code{proj_predict} returns a \eqn{S \times N}{S x N} matrix of
predictions.
}
Thereby, \eqn{S} denotes the number of (possibly clustered) projected
posterior draws and \eqn{N} denotes the number of observations.

If the prediction is done for more than one submodel, the output from above
is returned for each submodel, giving a named \code{list} with one element
for each submodel (the names of this \code{list} being the numbers of
solutions terms of the submodels when counting the intercept, too).
}
\description{
\code{proj_linpred} gives draws of the linear predictor (possibly transformed
to response scale) of a projected submodel (i.e., a submodel resulting from
projecting the reference model onto it). \code{proj_predict} draws from the
predictive distribution of a projected submodel. If the projection has not
been performed, both functions also perform the projection. Both functions
can also handle multiple projected submodels at once (if the input object is
of class \code{"vsel"}).
}
\examples{
\donttest{
if (requireNamespace("rstanarm", quietly = TRUE)) {
  # Data:
  n <- 30
  d <- 5
  x <- matrix(rnorm(n * d), nrow = n)
  y <- x[, 1] + rnorm(n, sd = 0.5)
  data <- data.frame(x, y)

  # Reference model (here an object of class "stanreg"):
  fit <- rstanarm::stan_glm(y ~ X1 + X2 + X3 + X4 + X5, family = gaussian(),
                            data = data, chains = 2, iter = 500, seed = 1235)

  # Variable selection (here without cross-validation, but only for the sake
  # of speed in this demonstration):
  vs <- varsel(fit)

  # Predictions (at the training points) from the projected submodels
  # corresponding to the first 4 selected predictor terms:
  pred <- proj_linpred(vs, nterms = 4)
  pred <- proj_predict(vs, nterms = 4)
}
}

}
