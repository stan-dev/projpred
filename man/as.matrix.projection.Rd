% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{as.matrix.projection}
\alias{as.matrix.projection}
\title{Extract projected parameter draws}
\usage{
\method{as.matrix}{projection}(x, ...)
}
\arguments{
\item{x}{An object of class \code{projection} (returned by \code{\link[=project]{project()}}, possibly
as elements of a list).}

\item{...}{Currently ignored.}
}
\value{
An \eqn{S_{\mbox{prj}} \times Q}{S_prj x Q} matrix of projected
draws, with \eqn{S_{\mbox{prj}}}{S_prj} denoting the number of projected
draws and \eqn{Q} the number of parameters.
}
\description{
This is the \code{\link[=as.matrix]{as.matrix()}} method for \code{projection} objects (returned by
\code{\link[=project]{project()}}, possibly as elements of a list). It extracts the projected
parameter draws and returns them as a matrix.
}
\examples{
if (requireNamespace("rstanarm", quietly = TRUE)) {
  # Data:
  dat_gauss <- data.frame(y = df_gaussian$y, df_gaussian$x)

  # The "stanreg" fit which will be used as the reference model:
  fit <- rstanarm::stan_glm(
    y ~ X1 + X2 + X3 + X4 + X5, family = gaussian(), data = dat_gauss,
    QR = TRUE, chains = 2, iter = 500, refresh = 0, seed = 9876
  )

  # Projection onto an arbitrary combination of predictor terms (with a small
  # value for `nclusters`, but only for the sake of speed in this example;
  # this is not recommended in general):
  prj <- project(fit, solution_terms = c("X1", "X3", "X5"), nclusters = 10,
                 seed = 9182)
  prjmat <- as.matrix(prj)
  # If the `posterior` package is installed, the output from
  # as.matrix.projection() can be used there:
  if (requireNamespace("posterior", quietly = TRUE)) {
    # If we ignored the fact that clustering was used here (because of
    # argument `nclusters` above); note that ignoring the clustering is not
    # recommended and only shown for demonstration purposes (a better
    # solution for the clustering case is explained below):
    prjdrws <- posterior::as_draws_matrix(prjmat)
    # Now, for example:
    print(posterior::summarize_draws(
      prjdrws,
      "median", "mad", function(x) quantile(x, probs = c(0.025, 0.975))
    ))
    # Better: Don't ignore the fact that clustering was used here by
    # resampling the clusters according to their weights. However, this
    # requires access to the cluster weights which is not implemented in
    # `projpred` yet. This example will be extended as soon as those weights
    # are accessible.
  }
}

}
